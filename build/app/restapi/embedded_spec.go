// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Pandoc can convert between documents between various formats.",
    "title": "pandoc",
    "version": "1.0",
    "x-direktiv-meta": {
      "categories": [
        "misc",
        "docs"
      ],
      "container": "gcr.io/direktiv/functions/pandoc",
      "issues": "https://github.com/direktiv-apps/pandoc/issues",
      "license": "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)",
      "long-description": "Pandoc is a document converter. It can convert from various formats like markup, HTML etc. into other formats like PDF or HTML.  All supported formats can be found on the pandoc website: [Docs](https://pandoc.org/MANUAL.html#options). This function can return the converted document as Base64 encoded file or can be stored in a scoped variable in Direktiv. ",
      "maintainer": "[direktiv.io](https://www.direktiv.io) ",
      "url": "https://github.com/direktiv-apps/pandoc"
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "default": "development",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "default": "/tmp",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "required": [
                "from",
                "to",
                "input"
              ],
              "properties": {
                "from": {
                  "type": "string"
                },
                "input": {
                  "type": "string"
                },
                "output": {
                  "type": "object",
                  "required": [
                    "scope",
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "scope": {
                      "type": "string",
                      "enum": [
                        "workflow",
                        "instance",
                        "namespace"
                      ]
                    }
                  }
                },
                "return": {
                  "type": "boolean"
                },
                "to": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of executed commands.",
            "schema": {
              "type": "object",
              "properties": {
                "pandoc": {
                  "type": "string"
                }
              },
              "additionalProperties": false
            },
            "examples": {
              "pandoc": "JVBERi0xLjUKJdDUxdgKNSAwIG9iago8PAov=="
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "exec",
              "exec": "pandoc -o direktiv.bin -f {{ .From }} -t {{ .To }} {{ .Input }}",
              "print": true,
              "silent": true
            },
            {
              "action": "exec",
              "exec": "{{- if .Return }}\nbase64 -w 0 direktiv.bin\n{{- else }}\necho \"no\"\n{{- end }}",
              "print": false,
              "silent": true
            },
            {
              "action": "exec",
              "exec": "{{- if .Output }}\nmv direktiv.bin out/{{ .Output.Scope }}/{{ .Output.Name }}\n{{- else }}\necho \"\"\n{{- end }}  ",
              "print": false,
              "silent": true
            }
          ],
          "output": "{\n  \"pandoc\": {{ (index . 1).result | toJson }}\n}\n"
        },
        "x-direktiv-errors": {
          "io.direktiv.command.error": "Command execution failed",
          "io.direktiv.output.error": "Template error for output generation of the service",
          "io.direktiv.ri.error": "Can not create information object from request"
        },
        "x-direktiv-examples": [
          {
            "content": "- id: pandoc\n  type: action\n  action:\n    function: pandoc\n    files: \n    - key: in.html\n      scope: workflow\n    input: \n      from: html\n      to: pdf\n      input: in.html",
            "title": "Basic"
          },
          {
            "content": "- id: pandoc\n  type: action\n  action:\n    function: pandoc\n    files: \n    - key: in.html\n      scope: workflow\n    input: \n      from: html\n      to: pdf\n      input: in.html\n      return: true",
            "title": "Base64 return value"
          }
        ],
        "x-direktiv-function": "functions:\n- id: pandoc\n  image: gcr.io/direktiv/functions/pandoc:1.0\n  type: knative-workflow"
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Pandoc can convert between documents between various formats.",
    "title": "pandoc",
    "version": "1.0",
    "x-direktiv-meta": {
      "categories": [
        "misc",
        "docs"
      ],
      "container": "gcr.io/direktiv/functions/pandoc",
      "issues": "https://github.com/direktiv-apps/pandoc/issues",
      "license": "[Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)",
      "long-description": "Pandoc is a document converter. It can convert from various formats like markup, HTML etc. into other formats like PDF or HTML.  All supported formats can be found on the pandoc website: [Docs](https://pandoc.org/MANUAL.html#options). This function can return the converted document as Base64 encoded file or can be stored in a scoped variable in Direktiv. ",
      "maintainer": "[direktiv.io](https://www.direktiv.io) ",
      "url": "https://github.com/direktiv-apps/pandoc"
    }
  },
  "paths": {
    "/": {
      "post": {
        "parameters": [
          {
            "type": "string",
            "default": "development",
            "description": "direktiv action id is an UUID. \nFor development it can be set to 'development'\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          },
          {
            "type": "string",
            "default": "/tmp",
            "description": "direktiv temp dir is the working directory for that request\nFor development it can be set to e.g. '/tmp'\n",
            "name": "Direktiv-TempDir",
            "in": "header"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/postParamsBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of executed commands.",
            "schema": {
              "$ref": "#/definitions/postOKBody"
            },
            "examples": {
              "pandoc": "JVBERi0xLjUKJdDUxdgKNSAwIG9iago8PAov=="
            }
          },
          "default": {
            "description": "generic error response",
            "schema": {
              "$ref": "#/definitions/error"
            },
            "headers": {
              "Direktiv-ErrorCode": {
                "type": "string"
              },
              "Direktiv-ErrorMessage": {
                "type": "string"
              }
            }
          }
        },
        "x-direktiv": {
          "cmds": [
            {
              "action": "exec",
              "exec": "pandoc -o direktiv.bin -f {{ .From }} -t {{ .To }} {{ .Input }}",
              "print": true,
              "silent": true
            },
            {
              "action": "exec",
              "exec": "{{- if .Return }}\nbase64 -w 0 direktiv.bin\n{{- else }}\necho \"no\"\n{{- end }}",
              "print": false,
              "silent": true
            },
            {
              "action": "exec",
              "exec": "{{- if .Output }}\nmv direktiv.bin out/{{ .Output.Scope }}/{{ .Output.Name }}\n{{- else }}\necho \"\"\n{{- end }}  ",
              "print": false,
              "silent": true
            }
          ],
          "output": "{\n  \"pandoc\": {{ (index . 1).result | toJson }}\n}\n"
        },
        "x-direktiv-errors": {
          "io.direktiv.command.error": "Command execution failed",
          "io.direktiv.output.error": "Template error for output generation of the service",
          "io.direktiv.ri.error": "Can not create information object from request"
        },
        "x-direktiv-examples": [
          {
            "content": "- id: pandoc\n  type: action\n  action:\n    function: pandoc\n    files: \n    - key: in.html\n      scope: workflow\n    input: \n      from: html\n      to: pdf\n      input: in.html",
            "title": "Basic"
          },
          {
            "content": "- id: pandoc\n  type: action\n  action:\n    function: pandoc\n    files: \n    - key: in.html\n      scope: workflow\n    input: \n      from: html\n      to: pdf\n      input: in.html\n      return: true",
            "title": "Base64 return value"
          }
        ],
        "x-direktiv-function": "functions:\n- id: pandoc\n  image: gcr.io/direktiv/functions/pandoc:1.0\n  type: knative-workflow"
      },
      "delete": {
        "parameters": [
          {
            "type": "string",
            "description": "On cancel Direktiv sends a DELETE request to\nthe action with id in the header\n",
            "name": "Direktiv-ActionID",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "x-direktiv": {
          "cancel": "echo 'cancel {{ .DirektivActionID }}'"
        }
      }
    }
  },
  "definitions": {
    "direktivFile": {
      "type": "object",
      "x-go-type": {
        "import": {
          "package": "github.com/direktiv/apps/go/pkg/apps"
        },
        "type": "DirektivFile"
      }
    },
    "error": {
      "type": "object",
      "required": [
        "errorCode",
        "errorMessage"
      ],
      "properties": {
        "errorCode": {
          "type": "string"
        },
        "errorMessage": {
          "type": "string"
        }
      }
    },
    "postOKBody": {
      "type": "object",
      "properties": {
        "pandoc": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "x-go-gen-location": "operations"
    },
    "postParamsBody": {
      "type": "object",
      "required": [
        "from",
        "to",
        "input"
      ],
      "properties": {
        "from": {
          "type": "string"
        },
        "input": {
          "type": "string"
        },
        "output": {
          "$ref": "#/definitions/postParamsBodyOutput"
        },
        "return": {
          "type": "boolean"
        },
        "to": {
          "type": "string"
        }
      },
      "x-go-gen-location": "operations"
    },
    "postParamsBodyOutput": {
      "type": "object",
      "required": [
        "scope",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "scope": {
          "type": "string",
          "enum": [
            "workflow",
            "instance",
            "namespace"
          ]
        }
      },
      "x-go-gen-location": "operations"
    }
  }
}`))
}
