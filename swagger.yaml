swagger: "2.0"
info:
  description: Run pandoc in Direktiv
  title: pandoc
  version: "1.0"
  x-direktiv-meta:
    container: gcr.io/direktiv/functions/pandoc
    maintainer: |-
      [direktiv.io](https://www.direktiv.io) 
    issues: https://github.com/direktiv-apps/pandoc/issues
    url: https://github.com/direktiv-apps/pandoc  
    categories:
    - unknown
    license: |-
      [Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)
    long-description: >-
      Run pandoc in Direktiv as a function
consumes:
- application/json
produces:
- application/json
schemes:
- http
paths:
  /: 
    delete:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          description: |
            On cancel Direktiv sends a DELETE request to
            the action with id in the header
      x-direktiv:
        cancel: echo 'cancel {{ .DirektivActionID }}'
      responses:
        200:
    post:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          default: development
          description: |
            direktiv action id is an UUID. 
            For development it can be set to 'development'
        - name: Direktiv-TempDir
          in: header
          type: string
          default: /tmp
          description: |
            direktiv temp dir is the working directory for that request
            For development it can be set to e.g. '/tmp'
        - name: body
          in: body
          schema:
            type: object
            required: ["from", "to", "input"]
            properties:
              from:
                type: string
              to:
                type: string
              input:
                type: string
              output:
                type: object
                required: ["scope", "name"]
                properties:
                  scope:
                    type: string
                    enum: ["workflow", "instance", "namespace"]
                  name: 
                    type: string
              return:
                type: boolean

              # files:
              #   type: array
              #   items:
              #     $ref: '#/definitions/direktivFile'
              #   description: File to create before running commands.
              #   default: []
              # commands:
              #   type: array
              #   description: Array of commands.
              #   items:
              #     type: object
              #     properties:
              #       command:
              #         type: string
              #         description: Command to run
              #       silent: 
              #         type: boolean
              #         description: If set to false the command will not print output to logs.
              #         default: false
              #       print: 
              #         type: boolean
              #         description: If set to false the command will not print the full command with arguments to logs.
              #         default: true
              #       continue: 
              #         type: boolean
              #         description: Stops excecution if command fails, otherwise proceeds with next command 
              #   default: 
              #   - command: echo Hello
      # direktiv code generation is configured here
      x-direktiv-function: |-
        functions:
        - id: pandoc
          image: gcr.io/direktiv/functions/pandoc:1.0
          type: knative-workflow
      x-direktiv-examples:
        # ADD MORE EXAMPLES HERE
        - title: Basic
          content: |-
            - id: pandoc
              type: action
              action:
                function: pandoc
                input: 
                  commands:
                  - command: Example of running pandoc
        - title: Advanced
          content: |-
            - id: pandoc
              type: action
              action:
                function: pandoc
                input: 
                  files:
                  - name: hello.txt
                    data: Hello World
                    mode: '0755'
                  commands:
                  - command: Example of running pandoc
      x-direktiv:  
        cmds:
        - action: exec
          exec: pandoc -o direktiv.bin -f {{ .From }} -t {{ .To }} {{ .Input }}
          silent: true
          print: true
        - action: exec
          exec: |-
            {{- if .Return }}
            base64 -w 0 direktiv.bin
            {{- else }}
            echo "no"
            {{- end }}
          silent: true
          print: false
        - action: exec
          exec: |-
            {{- if .Output }}
            mv direktiv.bin out/{{ .Output.Scope }}/{{ .Output.Name }}
            {{- else }}
            echo ""
            {{- end }}  
          print: false
          silent: true
        output: |
          {
            "pandoc": {{ (index . 1).result | toJson }}
          }
      x-direktiv-errors:
        io.direktiv.command.error: Command execution failed
        io.direktiv.output.error: Template error for output generation of the service
        io.direktiv.ri.error: Can not create information object from request
      responses:
        200:
          description: List of executed commands.
          examples:
            pandoc: "JVBERi0xLjUKJdDUxdgKNSAwIG9iago8PAov=="
          schema:
            type: object
            properties:
              pandoc:
                type: string
            additionalProperties: {}
        default:
          description: generic error response
          headers:
            Direktiv-ErrorCode:
              type: string
            Direktiv-ErrorMessage:
              type: string
          schema:
            $ref: "#/definitions/error"
definitions:
  direktivFile:
    type: object
    x-go-type:
      type: DirektivFile
      import:
        package: github.com/direktiv/apps/go/pkg/apps 
  error:
    type: object
    required:
      - errorCode
      - errorMessage
    properties:
      errorCode:
        type: string
      errorMessage:
        type: string
