swagger: "2.0"
info:
  description: Pandoc can convert between documents between various formats. 
  title: pandoc
  version: "1.0"
  x-direktiv-meta:
    container: gcr.io/direktiv/functions/pandoc
    maintainer: |-
      [direktiv.io](https://www.direktiv.io) 
    issues: https://github.com/direktiv-apps/pandoc/issues
    url: https://github.com/direktiv-apps/pandoc  
    categories:
    - misc
    - docs
    license: |-
      [Apache-2.0](https://www.apache.org/licenses/LICENSE-2.0)
    long-description: >-
      Pandoc is a document converter. It can convert from various formats like markup, HTML etc. into other formats like PDF or HTML. 
      All supported formats can be found on the pandoc website: [Docs](https://pandoc.org/MANUAL.html#options). This function can return
      the converted document as Base64 encoded file or can be stored in a scoped variable in Direktiv. 
consumes:
- application/json
produces:
- application/json
schemes:
- http
paths:
  /: 
    delete:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          description: |
            On cancel Direktiv sends a DELETE request to
            the action with id in the header
      x-direktiv:
        cancel: echo 'cancel {{ .DirektivActionID }}'
      responses:
        200:
    post:
      parameters:
        - name: Direktiv-ActionID
          in: header
          type: string
          default: development
          description: |
            direktiv action id is an UUID. 
            For development it can be set to 'development'
        - name: Direktiv-TempDir
          in: header
          type: string
          default: /tmp
          description: |
            direktiv temp dir is the working directory for that request
            For development it can be set to e.g. '/tmp'
        - name: body
          in: body
          schema:
            type: object
            required: ["from", "to", "input"]
            properties:
              from:
                type: string
              to:
                type: string
              input:
                type: string
              output:
                type: object
                required: ["scope", "name"]
                properties:
                  scope:
                    type: string
                    enum: ["workflow", "instance", "namespace"]
                  name: 
                    type: string
              return:
                type: boolean
      x-direktiv-function: |-
        functions:
        - id: pandoc
          image: gcr.io/direktiv/functions/pandoc:1.0
          type: knative-workflow
      x-direktiv-examples:
        - title: Basic
          content: |-
            - id: pandoc
              type: action
              files: 
              - key: in.html
                scope: workflow
              action:
                function: pandoc
                input: 
                  from: html
                  to: pdf
                  input: in.html
        - title: Base64 return value
          content: |-
            - id: pandoc
              type: action
              action:
                function: pandoc
                files: 
                - key: in.html
                  scope: workflow
                input: 
                  from: html
                  to: pdf
                  input: in.html
                  return: true
      x-direktiv:  
        cmds:
        - action: exec
          exec: pandoc -o direktiv.bin -f {{ .From }} -t {{ .To }} {{ .Input }}
          silent: true
          print: true
        - action: exec
          exec: |-
            {{- if .Return }}
            base64 -w 0 direktiv.bin
            {{- else }}
            echo "no"
            {{- end }}
          silent: true
          print: false
        - action: exec
          exec: |-
            {{- if .Output }}
            mv direktiv.bin out/{{ .Output.Scope }}/{{ .Output.Name }}
            {{- else }}
            echo ""
            {{- end }}  
          print: false
          silent: true
        output: |
          {
            "pandoc": {{ (index . 1).result | toJson }}
          }
      x-direktiv-errors:
        io.direktiv.command.error: Command execution failed
        io.direktiv.output.error: Template error for output generation of the service
        io.direktiv.ri.error: Can not create information object from request
      responses:
        200:
          description: List of executed commands.
          examples:
            pandoc: "JVBERi0xLjUKJdDUxdgKNSAwIG9iago8PAov=="
          schema:
            type: object
            properties:
              pandoc:
                type: string
            additionalProperties: {}
        default:
          description: generic error response
          headers:
            Direktiv-ErrorCode:
              type: string
            Direktiv-ErrorMessage:
              type: string
          schema:
            $ref: "#/definitions/error"
definitions:
  direktivFile:
    type: object
    x-go-type:
      type: DirektivFile
      import:
        package: github.com/direktiv/apps/go/pkg/apps 
  error:
    type: object
    required:
      - errorCode
      - errorMessage
    properties:
      errorCode:
        type: string
      errorMessage:
        type: string
